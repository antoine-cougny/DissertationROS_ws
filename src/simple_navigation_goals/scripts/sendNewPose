#!/usr/bin/env python
__author__ = 'ant0ine'

import rospy
import math

import actionlib
from move_base_msgs.msg import MoveBaseAction, MoveBaseGoal
from actionlib_msgs.msg import GoalStatus
from geometry_msgs.msg import Pose, Point, Quaternion
from tf.transformations import quaternion_from_euler

def goalSender():
    pub = rospy.Publisher('goalSender', Pose, queue_size=10)
    rospy.init_node('talker', anonymous=True)
    rate = rospy.Rate(10) # 10hz
    while not rospy.is_shutdown():
        print("\n---------\nNext Goal: x, y, z")
        try:
            newGoalPos = input("Use [,] as separator: ")
            newGoalOrient = float(input("Enter z angle: "))
        except (NameError, SyntaxError) as e:
            print("\n\tUSE [,] AS SEPARATOR FOR FLOATS\n\t"+ str(e))
            continue


        # A Pose msg is a Point and a Quaternion
        try:
            newPoint = Point(*newGoalPos)
            newQuat = Quaternion(*(quaternion_from_euler(0, 0, newGoalOrient*math.pi/180, axes='sxyz')))
        except TypeError as e:
            print("\n\tIS IT TOO HARD TO INPUT NIMBER LIKE 0.5,1.5,0 AND NOT SOME WEIRD STUFF ???")
            continue
        newPose = Pose(newPoint, newQuat)

        rospy.loginfo(newPose)
        pub.publish(newPose)
        rate.sleep()

if __name__ == '__main__':
    try:
        goalSender()
    except rospy.ROSInterruptException:
        pass
